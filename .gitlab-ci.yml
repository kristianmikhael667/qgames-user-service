stages:
  - deploy

build_k8s:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script: 
    - echo -e "DB_NAME=$DB_NAME \n 
        DB_USER=$DB_USER \n
        DB_PASS=$DB_PASS \n
        DB_HOST=$DB_HOST \n
        JWT_SECRET= $JWT_SECRET" >> .env

  script:  
    - docker build -t $K8S_TAG_COMMIT -t $K8S_TAG_LATEST .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $K8S_TAG_COMMIT
    - docker push $K8S_TAG_LATEST
  only: 
    - dev


deploy_k8s:
  stage: deploy
  script:
    - chmod og= $ID_RSA_K8S
    - ssh -i $ID_RSA_K8S -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_K8S "cd qgrowid-cluster && git pull"
    - ssh -i $ID_RSA_K8S -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_K8S "cd qgrowid-cluster/deployments && kubectl apply -f $K8S_YAML"
    - ssh -i $ID_RSA_K8S -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_K8S "cd qgrowid-cluster/services && kubectl apply -f $K8S_SERVICE_YAML"
    - ssh -i $ID_RSA_K8S -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP_K8S "kubectl rollout restart deployment $K8S_DPL_NAME -n $K8S_NAMESPACE"
  only:
    - dev 
